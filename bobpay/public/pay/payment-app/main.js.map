{"version":3,"sources":["webpack:///../validator-lib/dist/address-validation.js","webpack:///../validator-lib/dist/browser.js","webpack:///../validator-lib/dist/browserValidatorFactory.js","webpack:///../validator-lib/dist/transfer-request.js","webpack:///../validator-lib/dist/validator/validator.js","webpack:///../validator-lib/dist/watcher-proxy/cached-watcher-proxy.js","webpack:///../validator-lib/dist/watcher-proxy/proxied-watcher-proxy.js","webpack:///./dist/interblockchain-components/fesm5/interblockchain-components.js","webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/pages/confirmations/confirmations.component.html","webpack:///./src/app/pages/confirmations/confirmations.component.scss","webpack:///./src/app/pages/confirmations/confirmations.component.ts","webpack:///./src/app/pages/payment-selection/payment-selection.component.html","webpack:///./src/app/pages/payment-selection/payment-selection.component.scss","webpack:///./src/app/pages/payment-selection/payment-selection.component.ts","webpack:///./src/app/pages/payment/payment.component.html","webpack:///./src/app/pages/payment/payment.component.scss","webpack:///./src/app/pages/payment/payment.component.ts","webpack:///./src/app/pages/summary/summary.component.html","webpack:///./src/app/pages/summary/summary.component.scss","webpack:///./src/app/pages/summary/summary.component.ts","webpack:///./src/app/services/currency-converter/currency-converter.service.ts","webpack:///./src/app/services/currency-selection/currency-selection.service.ts","webpack:///./src/app/services/key-factory/key-factory.service.ts","webpack:///./src/app/services/ledger/ledger.service.ts","webpack:///./src/app/services/payment-sw/payment-sw.service.ts","webpack:///./src/app/services/validation/validation.service.ts","webpack:///./src/app/utils.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;;AAAa;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACba;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,gCAAgC,mBAAO,CAAC,mFAA2B;AACnE;AACA,8BAA8B,mBAAO,CAAC,2GAAuC;AAC7E;AACA,SAAS,mBAAO,CAAC,yGAAsC;;;;;;;;;;;;;ACT1C;AACb,8CAA8C,cAAc;AAC5D,oBAAoB,mBAAO,CAAC,2EAAuB;AACnD;AACA;AACA,sDAAsD;AACtD;AACA;AACA;;;;;;;;;;;;;ACRa;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,6BAA6B,sCAAsC;AAClG;AACA;AACA;;;;;;;;;;;;;AChCa;AACb;AACA;AACA;AACA;AACA;AACA,4DAA4D,cAAc;AAC1E;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,eAAe,mBAAO,CAAC,+DAAM;AAC7B,oBAAoB,mBAAO,CAAC,mFAAgB;AAC5C,2BAA2B,mBAAO,CAAC,sEAAqB;AACxD,uBAAuB,mBAAO,CAAC,6EAAc;AAC7C,6BAA6B,mBAAO,CAAC,0EAAuB;AAC5D,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,aAAa,6BAA6B;AAC1C,8BAA8B,4DAA4D,6CAA6C;AACvI;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,2BAA2B;AACxC;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,oCAAoC,GAAG,oCAAoC,GAAG,2CAA2C;AAChJ,kBAAkB,oCAAoC,GAAG,oCAAoC,GAAG,2CAA2C;AAC3I;AACA;AACA,uBAAuB,8BAA8B,GAAG,8BAA8B,GAAG,2CAA2C;AACpI,kBAAkB,8BAA8B,GAAG,8BAA8B,GAAG,2CAA2C;AAC/H;AACA;AACA;AACA,uBAAuB,sBAAsB,GAAG,+BAA+B,GAAG,6BAA6B;AAC/G,kBAAkB,sBAAsB,GAAG,+BAA+B,GAAG,6BAA6B;AAC1G;AACA;AACA;AACA;AACA,kCAAkC,iBAAiB,eAAe,2GAA2G;AAC7K,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,QAAQ,wHAAwH;AAChL;AACA;AACA,qDAAqD,SAAS,gIAAgI;AAC9L;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,6HAA6H,yCAAyC,+DAA+D,yCAAyC;AACvR;AACA;AACA;;;;;;;;;;;;;AC9Ga;AACb,8CAA8C,cAAc;AAC5D,oBAAoB,mBAAO,CAAC,mFAAgB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,cAAc,GAAG,QAAQ,GAAG,QAAQ,GAAG,OAAO;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACnBa;AACb;AACA;AACA;AACA;AACA;AACA,4DAA4D,cAAc;AAC1E;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,oBAAoB,mBAAO,CAAC,mFAAgB;AAC5C,eAAe,mBAAO,CAAC,+DAAM;AAC7B,oBAAoB,mBAAO,CAAC,mFAAgB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0FAA0F,SAAS;AACnG,+BAA+B,SAAS,wBAAwB;AAChE;AACA;AACA;;;;;;;;;;;;;AC7EA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkF;AACnC;AACD;;AAE9C;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,sDAAQ;AACxB;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,kDAAkD,WAAW;AAC7D;AACA,iBAAiB,OAAO,mDAAK,EAAE;AAC/B;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,sDAAQ;AACxB;AACA,wBAAwB,4DAAY;AACpC,wBAAwB,2DAAe;AACvC;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,SAAS,OAAO,wDAAU,EAAE;AAC5B;AACA;AACA,qDAAqD,WAAW;AAChE;AACA,CAAC;;AAED;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,sDAAQ;AACxB;AACA,wBAAwB,4DAAY;AACpC;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,SAAS,OAAO,uDAAS;AACzB;AACA,wIAAwI,eAAe,KAAK,KAAK,+rBAA+rB,eAAe,KAAK,KAAK;AACz3B,8CAA8C,kBAAkB,aAAa,sBAAsB,aAAa,YAAY,iBAAiB,aAAa,uBAAuB,mBAAmB,wBAAwB,uBAAuB,iBAAiB,iCAAiC,yBAAyB,kCAAkC,UAAU,iBAAiB,eAAe,iBAAiB,qBAAqB,2BAA2B,WAAW,YAAY,kBAAkB,aAAa,mBAAmB,uBAAuB,4CAA4C,kBAAkB;AACzmB,iBAAiB,IAAI;AACrB;AACA;AACA,uDAAuD;AACvD,SAAS;AACT,MAAM;AACN;AACA,kBAAkB,OAAO,mDAAK,EAAE;AAChC,oBAAoB,OAAO,mDAAK,EAAE;AAClC,eAAe,OAAO,mDAAK,EAAE;AAC7B,iBAAiB,OAAO,uDAAS,oBAAoB;AACrD;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,sDAAQ;AACxB;AACA,wBAAwB,4DAAY;AACpC;AACA;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc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","file":"main.js","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass AddressValidation {\n    constructor(info) {\n        this.info = info;\n    }\n    get isValid() {\n        return this.info.currentNbConf === this.info.requiredNbConf;\n    }\n    get isCompleted() {\n        return this.info.currentNbConf >= this.info.requiredNbConf;\n    }\n}\nexports.AddressValidation = AddressValidation;\n","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar browserValidatorFactory_1 = require(\"./browserValidatorFactory\");\nexports.ValidatorFactory = browserValidatorFactory_1.BrowserValidatorFactory;\nvar proxied_watcher_proxy_1 = require(\"./watcher-proxy/proxied-watcher-proxy\");\nexports.WatcherProxy = proxied_watcher_proxy_1.ProxiedWatcherProxy;\n__export(require(\"./watcher-proxy/cached-watcher-proxy\"));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst validator_1 = require(\"./validator/validator\");\nclass BrowserValidatorFactory {\n    static create(watcher) {\n        return new validator_1.Validator(watcher || {});\n    }\n}\nexports.BrowserValidatorFactory = BrowserValidatorFactory;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass TransferRequest {\n    constructor(_validationResponse) {\n        this._validationResponse = _validationResponse;\n        this.timestamp = new Date();\n    }\n    get source() {\n        return this._validationResponse.source;\n    }\n    get dest() {\n        return this._validationResponse.dest;\n    }\n    get id() {\n        return this._validationResponse.id;\n    }\n    get isSourceCompleted() {\n        return !!(this._validationResponse.source && this._validationResponse.source.currentNbConf >= this._validationResponse.source.requiredNbConf);\n    }\n    get isDestCompleted() {\n        return !!(this._validationResponse.dest && this._validationResponse.dest.currentNbConf >= this._validationResponse.dest.requiredNbConf);\n    }\n    get isCompleted() {\n        return this.isSourceCompleted && this.isDestCompleted;\n    }\n    get isValid() {\n        return !!(this._validationResponse.source && this._validationResponse.dest && this._validationResponse.dest.amount === this._validationResponse.source.amount);\n    }\n    toJSON() {\n        return Object.assign({}, this._validationResponse, { validatorReceivedAt: this.timestamp });\n    }\n}\nexports.TransferRequest = TransferRequest;\n","\"use strict\";\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\n            t[p[i]] = s[p[i]];\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst rxjs_1 = require(\"rxjs\");\nconst operators_1 = require(\"rxjs/operators\");\nconst transfer_request_1 = require(\"../transfer-request\");\nconst bignumber_js_1 = require(\"bignumber.js\");\nconst address_validation_1 = require(\"../address-validation\");\n// import { logger } from '../logger/logger';\nclass Validator {\n    constructor(_watcherProxy) {\n        this._watcherProxy = _watcherProxy;\n        this.isResponseEventMatchingRequest = (request, prop) => operators_1.filter((payload) => this.getKeyFromResponse(payload) === this.getKeyFromRequest(request, prop));\n        this.isResponseEventMatchingSingleRequest = (request) => operators_1.filter((payload) => this.getKeyFromResponse(payload) === this.getKeyFromSingleRequest(request));\n        this.unsubscribeOnCompleted = (request) => operators_1.tap((validation) => {\n            if (validation.isCompleted) {\n                this._watcherProxy.unwatch(request.id, request.address, request.network, request.nbConf);\n            }\n        });\n    }\n    uniformize(_a) {\n        var { network, addresses, nbConf } = _a, rest = __rest(_a, [\"network\", \"addresses\", \"nbConf\"]);\n        return Object.assign({ network: network.toUpperCase(), addresses: addresses.map(({ address, amount, onlyReqConf, requiredConf }) => {\n                return {\n                    amount: Math.abs(Number(amount)),\n                    address,\n                    onlyReqConf,\n                    requiredConf: Number(requiredConf),\n                };\n            }), nbConf: Number(nbConf) }, rest);\n    }\n    // TODO extract this into its own npm package @interblockchain/utils\n    convertAmount(amount, ticker) {\n        console.log(\" Amount: \" + amount + \" ticker: \" + ticker);\n        let value = new bignumber_js_1.BigNumber(amount);\n        if (!value.isFinite() || value.isZero()) {\n            throw { name: \"convertAmount\", message: \"Amount is zero or not finite.\" };\n        }\n        switch (ticker.toUpperCase()) {\n            // case \"XLM\":\n            //     return value.toString()\n            case \"TBTC\":\n            case \"TLTC\":\n            case \"ITLTC\":\n            case \"ITBTC\":\n            case \"TBCH\":\n            case \"ITBCH\":\n                //Satoshi is 10^-8 BTC\n                let factor = new bignumber_js_1.BigNumber(10).exponentiatedBy(8);\n                return value.multipliedBy(factor).toString();\n            case \"TETH\":\n            case \"ITETH\":\n                //Wei is 10^-18 ETH\n                factor = new bignumber_js_1.BigNumber(10).exponentiatedBy(18);\n                return value.multipliedBy(factor).toString();\n            default:\n                throw { name: \"convertAmount\", message: \"Asset not supported\" };\n        }\n    }\n    getAddress(addresses) {\n        return addresses[0].address;\n    }\n    getKeyFromRequest(request, prop) {\n        console.log(`${request[prop].address.toUpperCase()}:${request[prop].network.toUpperCase()}:${this.convertAmount(request.amount, 'tBTC')}`);\n        return `${request[prop].address.toUpperCase()}:${request[prop].network.toUpperCase()}:${this.convertAmount(request.amount, 'tBTC')}`;\n    }\n    getKeyFromSingleRequest(request) {\n        console.log(`${request.address.toUpperCase()}:${request.network.toUpperCase()}:${this.convertAmount(request.amount, 'tBTC')}`);\n        return `${request.address.toUpperCase()}:${request.network.toUpperCase()}:${this.convertAmount(request.amount, 'tBTC')}`;\n    }\n    getKeyFromResponse(response) {\n        const address = this.getAddress(response.addresses);\n        console.log(`${address.toUpperCase()}:${response.network.toUpperCase()}:${response.addresses[0].amount}`);\n        return `${address.toUpperCase()}:${response.network.toUpperCase()}:${response.addresses[0].amount}`;\n    }\n    validateSingleTransaction(request) {\n        // logger.info('[Validator]: Start validation on single transaction:', request.id);\n        return this._watcherProxy.watch(request.id, request.address, request.network, request.nbConf).pipe(operators_1.tap(() => console.log('Data received')), operators_1.tap(console.log), operators_1.map(this.uniformize), this.isResponseEventMatchingSingleRequest(request), operators_1.tap(() => console.log('Response matching request'))).pipe(operators_1.map((validation) => {\n            return Object.assign({ id: request.id }, validation, { requiredNbConf: request.nbConf, currentNbConf: validation.nbConf, amount: validation.addresses[0].amount });\n        }), operators_1.map((response) => new address_validation_1.AddressValidation(response)), this.unsubscribeOnCompleted(request));\n    }\n    ;\n    validate(request) {\n        return rxjs_1.combineLatest(this._watcherProxy.watch(request.id, request.source.address, request.source.network, request.source.nbConf).pipe(operators_1.tap(console.log), operators_1.map(this.uniformize), this.isResponseEventMatchingRequest(request, 'source'), operators_1.startWith(null)), this._watcherProxy.watch(request.id, request.destination.address, request.destination.network, request.destination.nbConf).pipe(operators_1.tap(console.log), operators_1.map(this.uniformize), this.isResponseEventMatchingRequest(request, 'destination'), operators_1.startWith(null))).pipe(operators_1.tap(console.log), operators_1.map(([source, destination]) => {\n            const src = source;\n            const dest = destination;\n            let sourcePayload = null;\n            let destinationPayload = null;\n            if (source) {\n                sourcePayload = Object.assign({}, src, { amount: src.addresses[0].amount, txHash: src.txHash, currentNbConf: src.nbConf, requiredNbConf: request.source.nbConf });\n            }\n            if (destination) {\n                destinationPayload = Object.assign({}, dest, { amount: dest.addresses[0].amount, currentNbConf: dest.nbConf, txHash: dest.txHash, requiredNbConf: request.destination.nbConf });\n            }\n            return {\n                id: request.id,\n                source: sourcePayload,\n                dest: destinationPayload\n            };\n        }), operators_1.map(response => new transfer_request_1.TransferRequest(response)), this.unsubscribeOnCompleted(Object.assign({ id: request.id, amount: request.amount }, request.source)), this.unsubscribeOnCompleted(Object.assign({ id: request.id, amount: request.amount }, request.destination)));\n    }\n}\nexports.Validator = Validator;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst operators_1 = require(\"rxjs/operators\");\nclass CachedWatcherProxy {\n    constructor(watcher) {\n        this.watcher = watcher;\n        this.watchMap = new Map();\n    }\n    watch(transactionId, address, network, nbConf) {\n        const key = `${transactionId}:${address}:${network}:${nbConf}`;\n        if (!this.watchMap.has(key)) {\n            this.watchMap.set(key, this.watcher.watch(transactionId, address, network, nbConf).pipe(operators_1.shareReplay()));\n        }\n        return this.watchMap.get(key);\n    }\n    unwatch(transactionId, address, network, nbConf) {\n        return this.watcher.unwatch(transactionId, address, network, nbConf);\n    }\n}\nexports.CachedWatcherProxy = CachedWatcherProxy;\n","\"use strict\";\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\n            t[p[i]] = s[p[i]];\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst operators_1 = require(\"rxjs/operators\");\nconst rxjs_1 = require(\"rxjs\");\nconst webSocket_1 = require(\"rxjs/webSocket\");\nclass ProxiedWatcherProxy {\n    constructor(proxyUrl, appIdSelector = () => localStorage.getItem('appID')) {\n        this.proxyUrl = proxyUrl;\n        this.appIdSelector = appIdSelector;\n        this.initObservable = rxjs_1.Observable.create((obs) => {\n            this.websocketSubject.next({\n                'action': 'init-proxy-connection',\n                'body': {\n                    'url': 'ws://206.189.191.247:7999/BTCnet/ws-validator',\n                    'params': {\n                        'headers': { 'apiKey': '42ad9bf1-1706-4104-901f-8d59d927dc5d' }\n                    }\n                }\n            });\n            obs.next(this.websocketObs);\n        });\n        this.websocketSubject = new webSocket_1.WebSocketSubject({\n            url: this.proxyUrl,\n            serializer: (data) => {\n                if (typeof data === 'string') {\n                    return data;\n                }\n                else {\n                    return JSON.stringify(data);\n                }\n            }\n        });\n        this.websocketObs = this.websocketSubject;\n        this.proxyInitialized = this.initObservable\n            .pipe(operators_1.switchMap((ws) => ws), operators_1.filter((data) => data.success), operators_1.switchMap(() => {\n            return rxjs_1.Observable.create((obs) => {\n                this.websocketSubject.next('clientID: ' + this.appIdSelector());\n                obs.next(null);\n            });\n        }), operators_1.delay(2000), operators_1.shareReplay());\n    }\n    unwatch(transactionId, address, network, nbConf) {\n        this.websocketSubject.next(this.createUnSubscribe(transactionId, address, network, nbConf));\n        return rxjs_1.of();\n    }\n    watch(id, address, network, nbConf) {\n        const ws = this.proxyInitialized.pipe(operators_1.switchMap(() => {\n            this.websocketSubject.next(this.createSubscribeRequest(id, address, network, nbConf));\n            return this.websocketObs;\n        }));\n        return ws;\n    }\n    createSubscribeRequest(transactionId, address, network, nbConf) {\n        return {\n            transactionID: transactionId,\n            action: 'subscribe',\n            clientURL: localStorage.getItem(`appID`),\n            network: network,\n            address: address,\n            requiredConf: nbConf,\n            onlyReqConf: false,\n        };\n    }\n    createUnSubscribe(transactionId, address, network, nbConf) {\n        const _a = this.createSubscribeRequest(transactionId, address, network, nbConf), { action } = _a, rest = __rest(_a, [\"action\"]);\n        return Object.assign({}, rest, { action: 'unsubscribe' });\n    }\n}\nexports.ProxiedWatcherProxy = ProxiedWatcherProxy;\n","import { NgModule, Component, Input, Injectable, ViewChild } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NgxQRCodeModule } from 'ngx-qrcode2';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\nvar InterblockchainComponentsModule = /** @class */ (function () {\n    function InterblockchainComponentsModule() {\n    }\n    InterblockchainComponentsModule.decorators = [\n        { type: NgModule, args: [{\n                    imports: [],\n                    declarations: [],\n                    exports: []\n                },] },\n    ];\n    return InterblockchainComponentsModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\nvar QrCodeComponent = /** @class */ (function () {\n    function QrCodeComponent() {\n    }\n    /**\n     * @return {?}\n     */\n    QrCodeComponent.prototype.ngOnInit = /**\n     * @return {?}\n     */\n    function () {\n    };\n    QrCodeComponent.decorators = [\n        { type: Component, args: [{\n                    selector: 'it-qr-code',\n                    template: \"<ngx-qrcode [qrc-value]=\\\"value\\\">\\n</ngx-qrcode>\",\n                    styles: [\"\"]\n                },] },\n    ];\n    /** @nocollapse */\n    QrCodeComponent.ctorParameters = function () { return []; };\n    QrCodeComponent.propDecorators = {\n        value: [{ type: Input }]\n    };\n    return QrCodeComponent;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\nvar QrCodeModule = /** @class */ (function () {\n    function QrCodeModule() {\n    }\n    QrCodeModule.decorators = [\n        { type: NgModule, args: [{\n                    imports: [\n                        CommonModule,\n                        NgxQRCodeModule\n                    ],\n                    exports: [QrCodeComponent],\n                    declarations: [QrCodeComponent]\n                },] },\n    ];\n    return QrCodeModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\nvar ThemeHelperService = /** @class */ (function () {\n    function ThemeHelperService() {\n    }\n    /**\n     * @param {?} variableName\n     * @return {?}\n     */\n    ThemeHelperService.prototype.getVariable = /**\n     * @param {?} variableName\n     * @return {?}\n     */\n    function (variableName) {\n        return window.getComputedStyle(window.document.documentElement).getPropertyValue(\"--\" + variableName);\n    };\n    Object.defineProperty(ThemeHelperService.prototype, \"primaryColor\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this.getVariable('primary-color');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ThemeHelperService.prototype, \"secondaryColor\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this.getVariable('secondary-color');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ThemeHelperService.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    ThemeHelperService.ctorParameters = function () { return []; };\n    return ThemeHelperService;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\nvar ThemingModule = /** @class */ (function () {\n    function ThemingModule() {\n    }\n    ThemingModule.decorators = [\n        { type: NgModule, args: [{\n                    imports: [\n                        CommonModule\n                    ],\n                    declarations: [],\n                    providers: [ThemeHelperService]\n                },] },\n    ];\n    return ThemingModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\nvar ProgressBarComponent = /** @class */ (function () {\n    function ProgressBarComponent(themeHelper) {\n        this.themeHelper = themeHelper;\n        this.radial = true;\n        this.SIZE = 120;\n        this.COLOR = this.themeHelper.secondaryColor;\n        this.RADIUS = 54;\n        this.CIRCUMFERENCE = 2 * Math.PI * this.RADIUS;\n    }\n    /**\n     * @return {?}\n     */\n    ProgressBarComponent.prototype.ngOnInit = /**\n     * @return {?}\n     */\n    function () {\n        this.value.nativeElement.style.strokeDasharray = this.CIRCUMFERENCE;\n    };\n    Object.defineProperty(ProgressBarComponent.prototype, \"roundedProgress\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return Math.ceil((this.progressCount / this.max) * 100);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ProgressBarComponent.prototype, \"progressValue\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            /** @type {?} */\n            var progress = this.roundedProgress / 100;\n            /** @type {?} */\n            var dashoffset = this.CIRCUMFERENCE * (1 - progress);\n            return dashoffset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ProgressBarComponent.prototype, \"completed\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this.progressCount === this.max;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ProgressBarComponent.prototype, \"progressCount\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return Math.min(this.progress, this.max);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ProgressBarComponent.prototype, \"progressWidth\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return (this.progressCount / this.max) * 100 + \"%\";\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ProgressBarComponent.decorators = [\n        { type: Component, args: [{\n                    selector: 'it-progress-bar',\n                    template: \"<div *ngIf=\\\"!radial\\\">\\n  <div class='progress-count' [class.success]='completed'>\\n    <span>\\n      {{progressCount}} / {{max}}\\n    </span>\\n  </div>\\n  <div class=\\\"progress\\\">\\n    <div class=\\\"progress-bar progress-bar-striped progress-bar-animated\\\" aria-valuemax=\\\"100\\\" [style.width]=\\\"progressWidth\\\"></div>\\n  </div>\\n</div>\\n<div class='progress-radial-container'>\\n  <svg class=\\\"progress-radial\\\" [attr.viewBox]=\\\"'0 0 ' + SIZE + ' ' + SIZE\\\">\\n    <circle class=\\\"progress__meter\\\" [attr.cx]=\\\"SIZE / 2\\\" [attr.cy]=\\\"SIZE / 2\\\" [attr.r]=\\\"RADIUS\\\" stroke-width=\\\"12\\\" />\\n    <circle #value class=\\\"progress__value\\\" [style.stroke]='COLOR' [style.strokeDashoffset]='progressValue' [attr.cx]=\\\"SIZE / 2\\\"\\n      [attr.cy]=\\\"SIZE / 2\\\" [attr.r]=\\\"RADIUS\\\" stroke-width=\\\"12\\\" />\\n  </svg>\\n  <span *ngIf='!completed'>{{progressCount}} / {{max}}</span>\\n  <span *ngIf='completed' class='fa fa-check' [style.color]='COLOR'></span>\\n</div>\",\n                    styles: [\".progress-count{border-radius:50%;padding:20px;border:5px solid #222;height:100px;width:100px;margin:20px auto;display:flex;justify-content:center;align-items:center}.progress-count.success{border:5px solid green}.progress-radial{-webkit-transform:rotate(-90deg);transform:rotate(-90deg)}.progress__meter,.progress__value{fill:none}.progress__meter{stroke:#e6e6e6}.progress__value{stroke-linecap:round}.progress-radial-container{width:70px;height:70px;position:relative;display:flex;align-items:center;justify-content:center}.progress-radial-container .progress-radial{position:absolute}\"],\n                },] },\n    ];\n    /** @nocollapse */\n    ProgressBarComponent.ctorParameters = function () { return [\n        { type: ThemeHelperService }\n    ]; };\n    ProgressBarComponent.propDecorators = {\n        radial: [{ type: Input }],\n        progress: [{ type: Input }],\n        max: [{ type: Input }],\n        value: [{ type: ViewChild, args: ['value',] }]\n    };\n    return ProgressBarComponent;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\nvar ProgressBarModule = /** @class */ (function () {\n    function ProgressBarModule() {\n    }\n    ProgressBarModule.decorators = [\n        { type: NgModule, args: [{\n                    imports: [\n                        CommonModule,\n                        ThemingModule\n                    ],\n                    declarations: [ProgressBarComponent],\n                    exports: [ProgressBarComponent]\n                },] },\n    ];\n    return ProgressBarModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\nexport { InterblockchainComponentsModule, QrCodeModule, ProgressBarModule, ProgressBarComponent as ɵd, QrCodeComponent as ɵa, ThemeHelperService as ɵc, ThemingModule as ɵb };\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"<div class='container'>\\n  <router-outlet></router-outlet>\\n</div>\"","module.exports = \":host {\\n  width: 100%;\\n  height: 100%;\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n  justify-content: center; }\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\nimport { PaymentComponent } from './pages/payment/payment.component';\nimport { QrCodeModule } from 'interblockchain-components';\nimport { PaymentSelectionComponent } from './pages/payment-selection/payment-selection.component';\nimport { ConfirmationsComponent } from './pages/confirmations/confirmations.component';\nimport { SummaryComponent } from './pages/summary/summary.component';\nimport { KeyFactoryService } from './services/key-factory/key-factory.service';\nimport { PaymentSwService } from './services/payment-sw/payment-sw.service';\nimport { ProgressBarModule } from 'interblockchain-components';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    PaymentComponent,\n    PaymentSelectionComponent,\n    ConfirmationsComponent,\n    SummaryComponent,\n  ],\n  imports: [\n    HttpClientModule,\n    BrowserModule,\n    QrCodeModule,\n    ProgressBarModule,\n    RouterModule.forRoot([\n      { path: '', pathMatch: 'full', component: PaymentSelectionComponent },\n      { path: 'payment', pathMatch: 'full', component: PaymentComponent },\n      { path: 'confirmations', pathMatch: 'full', component: ConfirmationsComponent },\n      // { path: 'summary', pathMatch: 'full', component: SummaryComponent }\n    ])\n  ],\n  providers: [KeyFactoryService, PaymentSwService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n  constructor(sw: PaymentSwService) {\n    sw.init();\n  }\n}\n","module.exports = \"<div class='confirmations-container' *ngIf='validation | async as validation'>\\n  <h3>Your transaction is in progress</h3>\\n  Amount {{validation.amount}} {{validation.ticker}}\\n  <it-progress-bar [progress]='validation.currentNbConf' [max]='validation.requiredNbConf'></it-progress-bar>\\n\\n  <div *ngIf='validation.isCompleted'>\\n    <button (click)='confirm()'>Return to merchant site</button>\\n  </div>\\n</div>\"","module.exports = \".confirmations-container {\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n  justify-content: center; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { PaymentSwService } from '../../services/payment-sw/payment-sw.service';\nimport { map } from 'rxjs/operators';\nimport { combineLatest } from 'rxjs';\n\n@Component({\n  selector: 'app-confirmations',\n  templateUrl: './confirmations.component.html',\n  styleUrls: ['./confirmations.component.scss']\n})\nexport class ConfirmationsComponent implements OnInit {\n\n  public validation = combineLatest(\n    this.sw.currentValidation,\n    this.sw.currentTransaction\n  ).pipe(\n    map(([{ info, isCompleted }, tx]) => ({\n      currentNbConf: info.currentNbConf,\n      requiredNbConf: info.requiredNbConf,\n      ticker: info.network,\n      amount: tx.amount,\n      isCompleted,\n    }))\n  );\n\n  constructor(\n    private sw: PaymentSwService,\n  ) { }\n\n  ngOnInit() {\n  }\n\n  confirm() {\n    this.sw.confirmPayment();\n  }\n\n}\n","module.exports = \"<div class='center-content'>\\n  <h4>Please the cryptocurrency you wish to pay with</h4>\\n  <div class='logo-container row'>\\n    <div class='col-xs-{{colSize}} center-content' *ngFor='let currency of supportedCurrencies'>\\n      <div class='logo' (click)='select(currency)'>\\n        <img class='logo-image' [class.grow]='selectedCurrency === currency' [src]='\\\"/assets/\\\" + currency.logo' />\\n      </div>\\n    </div>\\n  </div>\\n  <br>\\n  <button *ngIf='selectedCurrency' (click)='submit()' class='btn btn-primary'>Pay with {{selectedCurrency.name}}</button>\\n</div>\"","module.exports = \".logo-container {\\n  width: 100%;\\n  max-width: 640px;\\n  justify-content: space-between; }\\n  .logo-container .logo {\\n    height: 70px;\\n    width: 70px;\\n    margin-top: 20px;\\n    cursor: pointer; }\\n  .logo-container .logo .logo-image {\\n      border-radius: 50%;\\n      box-shadow: 1px 1px 1px 1px rgba(0, 0, 0, 0.1);\\n      background-color: white;\\n      width: 100%;\\n      margin-bottom: 5px;\\n      transition: -webkit-transform .2s;\\n      transition: transform .2s;\\n      transition: transform .2s, -webkit-transform .2s; }\\n  .logo-container .logo .logo-image.grow, .logo-container .logo .logo-image:hover {\\n        -webkit-transform: scale(1.3);\\n                transform: scale(1.3); }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { environment } from '../../../environments/environment';\nimport { Router } from '@angular/router';\nimport { PaymentSwService } from '../../services/payment-sw/payment-sw.service';\nimport { CurrencySelectionService } from '../../services/currency-selection/currency-selection.service';\n\n@Component({\n  selector: 'app-payment-selection',\n  templateUrl: './payment-selection.component.html',\n  styleUrls: ['./payment-selection.component.scss']\n})\nexport class PaymentSelectionComponent implements OnInit {\n\n  public colSize = 3;\n  public selectedCurrency = null;\n\n  get supportedCurrencies() {\n    return environment.supportedCurrencies;\n  }\n\n  constructor(\n    private router: Router,\n    private selectionService: CurrencySelectionService\n  ) { }\n\n  ngOnInit() {\n  }\n\n  public select(currency: string) {\n    this.selectedCurrency = currency;\n  }\n\n  public submit() {\n    this.router.navigate(['/payment']).then(() => {\n      this.selectionService.select(this.selectedCurrency.ticker);\n    });\n  }\n\n}\n","module.exports = \"<div class='container' *ngIf='currentTransaction | async as transaction'>\\n  Amount: {{transaction.amount}} {{transaction.network}}\\n  <span class='small text-muted'>Original amount: {{transaction.original.value}} {{transaction.original.currency}}</span>\\n  <span class='small text-muted'>Rate conversion done by: <a href='http://coinmarketcap.com' target='_blank'>http://coinmarketcap.com</a></span>\\n  <br>\\n  <it-qr-code [value]='transaction.qrCode'></it-qr-code>\\n  <br>\\n  {{transaction.toAddress}}\\n  <input #addressInput type='text' style='position: absolute; top:-9999999px' [value]='transaction.toAddress' />\\n  <button (click)='copy()' class='btn btn-primary'>Copy</button>\\n</div>\"","module.exports = \":host {\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n  justify-content: center; }\\n  :host .container {\\n    display: flex;\\n    flex-direction: column;\\n    align-items: center;\\n    justify-content: center; }\\n\"","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { KeyFactoryService } from '../../services/key-factory/key-factory.service';\nimport { map, switchMap } from 'rxjs/operators';\nimport { PaymentSwService } from '../../services/payment-sw/payment-sw.service';\nimport { ValidationService } from '../../services/validation/validation.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-payment',\n  templateUrl: './payment.component.html',\n  styleUrls: ['./payment.component.scss']\n})\nexport class PaymentComponent implements OnInit {\n\n  @ViewChild('addressInput')\n  addressInput: ElementRef;\n\n  public currentTransaction = this.sw.currentTransaction.pipe(\n    map(({ toAddress, amount, ...rest }) => {\n      return {\n        toAddress,\n        amount,\n        ...rest,\n        qrCode: `bitcoin:${toAddress}?amount=${amount}`\n      };\n    }));\n\n  constructor(\n    private sw: PaymentSwService,\n    private router: Router\n  ) { }\n\n  ngOnInit() {\n    this.sw.currentValidation.subscribe(() => {\n      this.sw.confirmPayment();\n      // this.router.navigate(['/confirmations']);\n    });\n  }\n\n  copy() {\n    this.addressInput.nativeElement.select();\n    document.execCommand('copy');\n  }\n\n}\n","module.exports = \"<p>\\n  summary works!\\n</p>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-summary',\n  templateUrl: './summary.component.html',\n  styleUrls: ['./summary.component.scss']\n})\nexport class SummaryComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { environment } from '../../../environments/environment';\n\ninterface CoinMarketCapPayload {\n  data: Data;\n  metadata: Metadata;\n}\n\ninterface Metadata {\n  timestamp: number;\n  error?: any;\n}\n\ninterface Data {\n  id: number;\n  name: string;\n  symbol: string;\n  website_slug: string;\n  rank: number;\n  circulating_supply: number;\n  total_supply: number;\n  max_supply?: any;\n  quotes: Quotes;\n  last_updated: number;\n}\n\ninterface Quotes {\n  [key: string]: CurrencyData;\n}\n\ninterface CurrencyData {\n  price: number;\n  volume_24h: number;\n  market_cap: number;\n  percent_change_1h: number;\n  percent_change_24h: number;\n  percent_change_7d: number;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CurrencyConverterService {\n\n  private apiUrl = 'https://api.coinmarketcap.com';\n\n  constructor(\n    private http: HttpClient,\n  ) { }\n\n  private getIDFromCurrency(currency: string) {\n    return environment.supportedCurrencies.find((x) => x.ticker === currency).apiId;\n  }\n\n  convert({ currency, value }, toCurrency: 'BTC' | 'tBTC') {\n    const toCurrencyID = this.getIDFromCurrency(toCurrency);\n    const currencyReg = /^t?(.*)$/; // TODO(simon) use a safer way to query amount from test net to main net\n    return this.http.get<CoinMarketCapPayload>(\n      `${this.apiUrl}/v2/ticker/${toCurrencyID}/?convert=${currencyReg.exec(currency)[1]}`\n    )\n      .pipe(map(({ data: { quotes } }) => {\n        const changeRate = Number(quotes[currency].price);\n        return {\n          currency: toCurrency,\n          value: (Number(value) / changeRate).toFixed(6),\n        };\n      }));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Subject, ReplaySubject, Observable, BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CurrencySelectionService {\n\n  private _selectedCurrency = new ReplaySubject();\n\n  public get selectedCurrency() {\n    // return new BehaviorSubject('tBTC');\n    return this._selectedCurrency.asObservable();\n  }\n\n  constructor() { }\n\n  select(currency: string) {\n    this._selectedCurrency.next(currency);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '../../../environments/environment';\n\nexport interface KeyFactoryResponse {\n  id: string;\n  token: string;\n  key: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class KeyFactoryService {\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  public getKey(id: string, ticker: string) {\n    return this.http.get<KeyFactoryResponse>(`${environment.keyFactory}${id}/${ticker}`);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { environment } from '../../../environments/environment';\n\ninterface LedgerTransaction {\n  accountID: string;\n  currency: string;\n  amount: number;\n  from: string;\n  provider: string;\n  initialValue: string;\n}\n\ninterface LedgerAccount {\n  accountID: string;\n  currency: string;\n  note: string;\n  folio: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LedgerService {\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  private headers({ apiKey }) {\n    const headers = new HttpHeaders({ 'apicode': apiKey, 'Content-Type': 'application/json' });\n    return { headers };\n  }\n\n  createAccount(account: LedgerAccount, apiKey): Observable<{}> {\n    return this.http.post(`${environment.ledgerUrl}create`, { ...account }, {\n      responseType: 'text',\n      observe: 'response',\n      ...this.headers({ apiKey })\n    });\n  }\n\n  createTx(tx: LedgerTransaction, apiKey: string): Observable<{}> {\n    return this.http.post(`${environment.ledgerUrl}tx`, { ...tx, operation: '+' }, {\n      responseType: 'text',\n      observe: 'response',\n      ...this.headers({ apiKey })\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { KeyFactoryService } from '../key-factory/key-factory.service';\nimport { Observable, ReplaySubject, BehaviorSubject } from 'rxjs';\nimport { map, shareReplay, switchMap, tap } from 'rxjs/operators';\nimport { AddressValidation } from '@interblockchain/validator/dist/address-validation';\nimport { ValidationService } from '../validation/validation.service';\nimport { LedgerService } from '../ledger/ledger.service';\nimport { uuidv4 } from '../../utils';\nimport { CurrencyConverterService } from '../currency-converter/currency-converter.service';\nimport { environment } from '../../../environments/environment';\nimport { CurrencySelectionService } from '../currency-selection/currency-selection.service';\n\nconst netPrefix = (network: string) => `t${network}`;\n\nconst mockData = {\n  total: { value: 55, currency: 'USD' }, methodData: [{\n    supportedMethods: 'https://carte7000-payment-demo.herokuapp.com/pay', data: {\n      apiKey: '85732589752hjfslkjhf',\n      supportedTokens: ['tBTC']\n    }\n  }]\n};\n\nexport interface Transaction {\n  id: string;\n  amount: number;\n  nbConf: number;\n  network: string;\n  toAddress: string;\n  original: {\n    currency: string;\n    value: string;\n  };\n}\n\nexport interface PaymentRequestData {\n  total: {\n    currency: string,\n    value: number,\n  };\n  methodData: {\n    supportedMethods: string,\n    data: { apiKey: string, supportedTokens: string[] }\n  }[];\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PaymentSwService {\n  // private swMessageSubject = new BehaviorSubject<PaymentRequestData>(mockData);\n  private swMessageSubject = new ReplaySubject<PaymentRequestData>();\n  private augmentedSwMessage = this.swMessageSubject.pipe(\n    switchMap(({ total, methodData }) => {\n      return this.currenySelection.selectedCurrency.pipe(\n        switchMap((selectedCurrency: string) => {\n          return this.currencyConverter.convert(total, selectedCurrency as any)\n            .pipe(\n              map((converted) => ({ converted, original: total, methodData, selectedCurrency }))\n            );\n        }));\n    }),\n    shareReplay()\n  );\n  public currentTransaction: Observable<Transaction>;\n  public currentValidation: Observable<AddressValidation>;\n  private paymentRequestClient: ServiceWorker;\n\n  private details;\n\n  private writeTransactionInLedger = switchMap<Transaction, Transaction>((tx) => {\n    return this.augmentedSwMessage.pipe(\n      switchMap(({ methodData, selectedCurrency }) => {\n        const { data: { apiKey } } = methodData.find((x) => x.supportedMethods === environment.methodName);\n        const uuid = uuidv4();\n        return this.ledger.createAccount({\n          accountID: uuid,\n          currency: selectedCurrency,\n          folio: tx.toAddress,\n          note: 'test'\n        }, apiKey).pipe(\n          tap(console.log),\n          switchMap(() => {\n            return this.ledger.createTx({\n              accountID: uuid,\n              amount: tx.amount,\n              currency: selectedCurrency,\n              provider: 'test',\n              from: 'test',\n              initialValue: '0'\n            }, apiKey).pipe(\n              map(_ => tx)\n            );\n          }));\n      }));\n  });\n\n  private watchingConfirmationsAndMapToValidation = switchMap((\n    { amount, id, nbConf, network, toAddress }\n  ) => {\n    return this.validation.watch({ address: toAddress, amount, id, nbConf, network });\n  });\n\n  private setDetails = tap<AddressValidation>((v) => {\n    if (v.isCompleted) {\n      this.details = {\n        amount: v.info.amount,\n        address: v.info.addresses[0].address,\n        txHash: v.info.txHash,\n      };\n    }\n  });\n\n  private getPaymentKeyAndCreateTransaction = switchMap(({ original, converted: { currency, value } }) => {\n    return this.keyFactory.getKey(uuidv4(), currency).pipe(\n      map((({ key }) => ({\n        toAddress: key,\n        amount: value,\n        nbConf: 0,\n        network: currency.toUpperCase(),\n        id: uuidv4(),\n        original,\n      }))),\n    );\n  });\n\n  constructor(\n    private keyFactory: KeyFactoryService,\n    private validation: ValidationService,\n    private ledger: LedgerService,\n    private currencyConverter: CurrencyConverterService,\n    private currenySelection: CurrencySelectionService\n  ) {\n    this.currentTransaction = this.augmentedSwMessage.pipe(\n      this.getPaymentKeyAndCreateTransaction,\n      shareReplay()\n    );\n\n\n    this.currentValidation = this.currentTransaction.pipe(\n      this.writeTransactionInLedger,\n      this.watchingConfirmationsAndMapToValidation,\n      this.setDetails\n    );\n  }\n\n  init() {\n    if (navigator.serviceWorker) {\n      navigator.serviceWorker.addEventListener('message', (e: { source: any, data: PaymentRequestData }) => {\n        this.paymentRequestClient = e.source;\n        this.swMessageSubject.next(e.data);\n        console.log(e);\n      });\n    }\n\n    if (navigator.serviceWorker.controller) {\n      navigator.serviceWorker.controller.postMessage('payment_app_window_ready');\n    }\n  }\n\n  public confirmPayment() {\n    const paymentAppResponse = {\n      methodName: 'https://carte7000-payment-demo.herokuapp.com/pay',\n      details: this.details,\n    };\n\n    this.paymentRequestClient.postMessage(paymentAppResponse);\n  }\n\n  private cancelPaymentRequest() {\n    if (!this.paymentRequestClient) {\n      return;\n    }\n\n    this.paymentRequestClient.postMessage('The payment request is cancelled by user');\n    window.close();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  ValidatorFactory,\n  WatcherProxy,\n  CachedWatcherProxy,\n  ISingleValidationRequest\n} from '@interblockchain/validator/dist/browser';\nimport { Validator } from '@interblockchain/validator/dist/validator/validator';\nimport { environment } from '../../../environments/environment';\nimport { uuidv4 } from '../../utils';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ValidationService {\n  private validator: Validator;\n\n  constructor() {\n    const watcherProxy = new WatcherProxy(environment.wsProxyUrl);\n    const cachedWatcherProxy = new CachedWatcherProxy(watcherProxy);\n    this.validator = ValidatorFactory.create(cachedWatcherProxy);\n  }\n\n  watch(request: ISingleValidationRequest) {\n    return this.validator.validateSingleTransaction(request);\n  }\n}\n","export const uuidv4 = () => {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n        // tslint:disable-next-line:no-bitwise\n        const r = Math.random() * 16 | 0, v = c === 'x' ? r : (r & 0x3 | 0x8);\n        return v.toString(16);\n    });\n};\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  // keyFactory: 'http://142.93.60.68:5080/api/v1/getaddress/',\n  // wsProxyUrl: 'ws://178.128.230.11:8080/',\n  // ledgerUrl: 'http://138.197.156.204:8081/',\n  methodName: 'https://carte7000-payment-demo.herokuapp.com/pay',\n  supportedCurrencies: [\n    {\n      name: 'Bitcoin',\n      logo: 'btc.png',\n      ticker: 'tBTC',\n      apiId: 1,\n    },\n    {\n      name: 'Ethereum',\n      logo: 'eth.png',\n      ticker: 'tETH',\n      apiId: 1027\n    },\n    {\n      name: 'Bitcoin Cash',\n      logo: 'bch.png',\n      ticker: 'tBCH',\n      apiId: 1831\n    },\n    {\n      name: 'Litecoin',\n      logo: 'ltc.png',\n      ticker: 'tLTC',\n      apiId: 2,\n    }\n  ],\n  wsProxyUrl: 'wss://carte7000-payment-demo.herokuapp.com',\n  keyFactory: '/keyFactory/',\n  ledgerUrl: '/ledger/'\n  // ledgerUrl: 'http://localhost:8081/'\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}